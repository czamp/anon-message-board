{"version":3,"sources":["config.js","helpers/api.js","components/BoardList.js","components/PublishThread.js","views/Home.js","components/NewThreadForm.js","components/DeleteForm.js","components/ReportButton.js","components/ReplyComponent.js","components/NewReplyForm.js","components/ThreadPreview.js","components/ThreadList.js","views/BoardView.js","components/ThreadComponent.js","views/ThreadView.js","components/Navbar.js","App.js","index.js"],"names":["URL","API","listBoards","callback","error","Axios","get","concat","then","res","data","catch","err","response","listThreads","board","getCompleteThread","thread_id","postThread","event","text","delete_password","preventDefault","post","postReply","deleteThread","delete","deleteReply","reply_id","reportThread","put","reportReply","BoardList","state","boards","isLoading","_this2","this","console","log","setState","sort","a","b","react_default","createElement","Container","style","marginTop","Segment","Header","as","Loader","inline","active","List","horizontal","divided","celled","map","i","Item","key","react_router_dom","to","toUpperCase","React","Component","PublishThread","success","handleAddition","e","_ref","value","_this","prevState","Object","toConsumableArray","handleChange","_ref2","name","defineProperty","handleSubmit","Form","Field","Dropdown","allowAdditions","disabled","fluid","loading","onAddItem","onChange","options","placeholder","search","selection","TextArea","Group","Input","size","type","width","Button","content","icon","labelPosition","onClick","primary","react_router","Home","paddingTop","display","justifyContent","flexDirection","Breadcrumb","Section","link","components_BoardList","Divider","components_PublishThread","NewThreadForm","postId","props","secondary","Message","DeleteForm","message","modalOpen","onSuccess","openModal","closeModal","Modal","onClose","open","trigger","Icon","Content","basic","color","ReportButton","handleClose","ReplyComponent","reply","Grid","Column","_id","dateTime","Date","created_on","toLocaleString","components_ReportButton","components_DeleteForm","NewReplyForm","ThreadPreview","thread","columns","replycount","replies","components_ReplyComponent","tertiary","components_NewReplyForm","ThreadList","threads","_this3","vertical","length","components_ThreadPreview","BoardView","match","params","id","components_NewThreadForm","components_ThreadList","ThreadComponent","ThreadView","components_ThreadComponent","Navbar","Menu","inverted","position","href","target","rel","App","minHeight","background","components_Navbar","path","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c34ae34a.chunk.js","sourcesContent":["// const URL = 'http://localhost:3000'\nconst URL = 'https://ash-skate.glitch.me/'\n\nexport default URL\n","import Axios from 'axios';\nimport URL from '../config';\n\nconst API = {\n\n  listBoards: (callback, error) => {\n    return Axios.get(`${URL}/api/boards`)\n      .then(res => callback(res.data))\n      .catch(err => error(err.response))\n  },\n\n  listThreads: (board, callback, error) => {\n    Axios.get(`${URL}/api/threads/${board}`)\n      .then(res => callback(res.data))\n      .catch(err => error(err.response))\n  },\n\n  getCompleteThread: (board, thread_id, callback, error) => {\n    Axios.get(`${URL}/api/replies/${board}?thread_id=${thread_id}`)\n    .then(res => callback(res))\n    .catch(err => error(err.response))\n  },\n\n  postThread: (event, board, text, delete_password, callback, error) => {\n    event.preventDefault();\n    Axios.post(`${URL}/api/threads/${board}`, {text, delete_password})\n      .then(res => callback(res))\n      .catch(err => error(err.response));\n  },\n\n  postReply: (event, board, text, delete_password, thread_id, callback, error) => {\n    event.preventDefault();\n    Axios.post(`${URL}/api/replies/${board}`, {text, delete_password, thread_id})\n      .then(res => callback(res))\n      .catch(err => error(err.response))\n  },\n\n  deleteThread: (event, board, thread_id, delete_password, callback, error) => {\n    event.preventDefault();\n    Axios.delete(`${URL}/api/threads/${board}`, {data: {thread_id, delete_password}})\n      .then(res => callback(res))\n      .catch(err => error(err.response));\n  },\n\n  deleteReply: (event, board, thread_id, reply_id, delete_password, callback, error) => {\n    event.preventDefault();\n    Axios.delete(`${URL}/api/replies/${board}`, {data: {thread_id, reply_id, delete_password}})\n      .then(res => callback(res))\n      .catch(err => error(err.response));\n  },\n\n  reportThread: (board, thread_id, callback, error) => {\n    Axios.put(`${URL}/api/threads/${board}`, {thread_id})\n      .then(res => callback(res))\n      .catch(err => error(err.response))\n  },\n\n  reportReply: (board, thread_id, reply_id, callback, error) => {\n    Axios.put(`${URL}/api/replies/${board}`, {thread_id, reply_id})\n      .then(res => callback(res))\n      .catch(err => error(err.response))\n  }\n\n}\n\nexport default API;\n","import React from \"react\";\nimport { List, Container, Header, Segment, Loader } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../helpers/api\";\n\nclass BoardList extends React.Component {\n  state = {\n    boards: [],\n    isLoading: true\n  };\n\n  componentDidMount() {\n    API.listBoards((boards, err) => {\n      if (err) console.log(err);\n      this.setState({\n        boards: boards.sort((a, b) => {\n          if (a > b) {\n            return 1;\n          } else return -1;\n        }),\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Container style={{ marginTop: \"2rem\" }}>\n        <Segment>\n          <Header as=\"h2\">Select a board to begin</Header>\n          <Loader inline=\"centered\" active={this.state.isLoading}>\n            Fetching Boards...\n          </Loader>\n          <List horizontal divided celled>\n            {this.state.boards.map((board, i) => (\n              <List.Item key={i}>\n                <Link to={`/b/${board}`}>{board.toUpperCase()}</Link>\n              </List.Item>\n            ))}\n          </List>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default BoardList;\n","import React from \"react\";\nimport { Form, Header, Segment, Dropdown } from \"semantic-ui-react\";\nimport { Redirect } from \"react-router-dom\";\nimport API from \"../helpers/api\";\n\nclass PublishThread extends React.Component {\n  state = {\n    text: \"\",\n    delete: \"\",\n    board: \"\",\n    boards: [],\n    success: false,\n    isLoading: true\n  };\n\n  componentDidMount() {\n    API.listBoards((boards, err) => {\n      if (err) console.log(err);\n      boards = boards.map((b, i) => {\n        return { key: i, text: b, value: b };\n      });\n      this.setState({\n        isLoading: false,\n        boards: boards.sort((a, b) => {\n          if (a.text > b.text) {\n            return 1;\n          } else return -1;\n        })\n      });\n    });\n  }\n  handleAddition = (e, { value }) => {\n    this.setState(prevState => ({\n      boards: [{ text: value, value }, ...prevState.boards]\n    }));\n  };\n  handleChange = (e, { name, value }) => {\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = e => {\n    API.postThread(\n      e,\n      this.state.board,\n      this.state.text,\n      this.state.delete,\n      () =>\n        this.setState({\n          success: true,\n          text: \"\",\n          delete: \"\"\n        }),\n      error => console.log(error)\n    );\n  };\n\n  render() {\n    return (\n      <Segment>\n        <Header>Submit a New Thread</Header>\n        <Form>\n          <Form.Field>\n            <label>Board</label>\n            <Dropdown\n              allowAdditions\n              disabled={this.state.isLoading}\n              fluid\n              loading={this.state.isLoading}\n              name=\"board\"\n              onAddItem={this.handleAddition}\n              onChange={this.handleChange}\n              options={this.state.boards}\n              placeholder=\"Choose a board, or create your own\"\n              search\n              selection\n              value={this.state.board}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Thread Text</label>\n            <Form.TextArea\n              name=\"text\"\n              onChange={this.handleChange}\n              placeholder=\"Thread text...\"\n              value={this.state.text}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Form.Group>\n              <Form.Input\n                name=\"delete\"\n                onChange={this.handleChange}\n                placeholder=\"Password to delete...\"\n                size=\"mini\"\n                type=\"password\"\n                value={this.state.delete}\n                width={4}\n              />\n              <Form.Button\n                content=\"Submit Thread\"\n                icon=\"edit\"\n                labelPosition=\"left\"\n                onClick={this.handleSubmit}\n                primary\n                size=\"mini\"\n              />\n            </Form.Group>\n          </Form.Field>\n        </Form>\n        {this.state.success && <Redirect to={`/b/${this.state.board}/`} />}\n      </Segment>\n    );\n  }\n}\n\nexport default PublishThread;\n","import React from \"react\";\nimport { Container, Divider, Breadcrumb } from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nimport BoardList from \"../components/BoardList\";\nimport PublishThread from \"../components/PublishThread\";\n\nconst Home = () => (\n  <Container\n    text\n    style={{\n      paddingTop: \"2rem\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\"\n    }}\n  >\n    <Breadcrumb>\n      <Breadcrumb.Section link>\n        <Link to=\"/\">Boards</Link>\n      </Breadcrumb.Section>\n    </Breadcrumb>\n    <BoardList />\n    <Divider horizontal>or</Divider>\n    <PublishThread />\n  </Container>\n);\n\nexport default Home;\n","import React from \"react\";\nimport { Form, Header, Segment, Message } from \"semantic-ui-react\";\nimport { Redirect } from \"react-router-dom\";\nimport API from \"../helpers/api\";\n\nclass NewThreadForm extends React.Component {\n  state = {\n    text: \"\",\n    delete: \"\",\n    success: false,\n    postId: \"\"\n  };\n  handleChange = (e, { name, value }) => {\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = e => {\n    API.postThread(\n      e,\n      this.props.board,\n      this.state.text,\n      this.state.delete,\n      res => this.setState({ success: true, postId: res.data }),\n      error => console.log(error)\n    );\n  };\n\n  render() {\n    return (\n      <Segment secondary>\n        <Header>Submit a New Thread</Header>\n        <Form>\n          <Form.Field>\n            <label>Thread Text</label>\n            <Form.TextArea\n              name=\"text\"\n              onChange={this.handleChange}\n              placeholder=\"Thread text...\"\n              value={this.state.text}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Form.Group>\n              <Form.Input\n                name=\"delete\"\n                onChange={this.handleChange}\n                placeholder=\"Password to delete...\"\n                size=\"mini\"\n                type=\"password\"\n                value={this.state.delete}\n                width={4}\n              />\n              <Form.Button\n                content=\"Submit Thread\"\n                icon=\"edit\"\n                labelPosition=\"left\"\n                onClick={this.handleSubmit}\n                primary\n                size=\"mini\"\n              />\n            </Form.Group>\n          </Form.Field>\n        </Form>\n        {this.state.success && (\n          <div>\n            <Message success>Your thread was successfully submitted</Message>\n            <Redirect\n              to={`/b/${this.props.board}/thread/${this.state.postId}`}\n            />\n          </div>\n        )}\n      </Segment>\n    );\n  }\n}\n\nexport default NewThreadForm;\n","import React from \"react\";\nimport API from \"../helpers/api\";\nimport { Header, Form, Message, Icon, Modal } from \"semantic-ui-react\";\n\nclass DeleteForm extends React.Component {\n  state = {\n    delete_password: \"\",\n    error: false,\n    isLoading: false,\n    message: \"\",\n    success: false\n  };\n\n  handleChange = (e, { name, value }) => {\n    this.setState({\n      [name]: value\n    });\n  };\n\n  deleteThread = e => {\n    this.setState({ isLoading: true });\n    API.deleteThread(\n      e,\n      this.props.board,\n      this.props.thread_id,\n      this.state.delete_password,\n      data =>\n        data.data !== \"incorrect password\"\n          ? this.setState({\n              error: false,\n              isLoading: false,\n              message: \"\",\n              success: true\n            })\n          : this.setState({\n              error: true,\n              isLoading: false,\n              message: data.data,\n              success: false,\n              modalOpen: false\n            }),\n      err =>\n        this.setState({\n          error: true,\n          isLoading: false,\n          message: err,\n          success: false\n        })\n    );\n  };\n\n  deleteReply = e => {\n    API.deleteReply(\n      e,\n      this.props.board,\n      this.props.thread_id,\n      this.props.reply_id,\n      this.state.delete_password,\n      data =>\n        data.data !== \"incorrect password\"\n          ? this.setState({ success: true, error: false, message: \"\", modalOpen: false })\n          : this.setState({ success: false, error: true, message: data.data }),\n      err => console.log(err)\n    );\n  };\n\n  onSuccess = () => this.props.onSuccess();\n\n  openModal = () => this.setState({ modalOpen: true });\n\n  closeModal = () => this.setState({ modalOpen: false });\n\n  render() {\n    return (\n      <Modal\n        onClose={this.closeModal}\n        open={this.state.modalOpen}\n        size=\"small\"\n        trigger={<Icon onClick={this.openModal} link name=\"trash\" />}\n      >\n        <Modal.Content>\n          <Header>Delete this post?</Header>\n          <Form>\n            <Form.Field>\n              <label>Enter your delete password to delete this post.</label>\n              <Form.Input\n                name=\"delete_password\"\n                onChange={this.handleChange}\n                placeholder=\"Password to delete...\"\n                type=\"password\"\n                value={this.state.delete_password}\n              />\n            </Form.Field>\n            <Form.Group>\n              <Form.Button\n                basic\n                color=\"red\"\n                loading={this.state.isLoading}\n                onClick={\n                  this.props.type === \"reply\"\n                    ? this.deleteReply\n                    : this.deleteThread\n                }\n                size=\"mini\"\n              >\n                Delete\n              </Form.Button>\n              <Form.Button size=\"mini\" onClick={this.closeModal} color=\"blue\">\n                Cancel\n              </Form.Button>\n            </Form.Group>\n          </Form>\n          {this.state.success && (\n            <Message success>\n              <Message.Header>Success</Message.Header>\n              {this.props.type === \"thread\" ? \"Thread\" : \"Reply \"}#\n              {this.props.type === \"thread\"\n                ? this.props.thread_id\n                : this.props.reply_id}{\" \"}\n              successfully deleted.\n            </Message>\n          )}\n          {this.state.error && (\n            <Message error>\n              <Message.Header>Error: {this.state.message} </Message.Header>\n              <p>\n                {this.props.type === \"thread\" ? \"Thread \" : \"Reply \"}#\n                {this.props.type === \"thread\"\n                  ? this.props.thread_id\n                  : this.props.reply_id}{\" \"}\n                could not be deleted.\n              </p>\n            </Message>\n          )}\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n\nexport default DeleteForm;\n","import React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport API from \"../helpers/api\";\n\nclass ReportButton extends React.Component {\n  state = {\n    success: false,\n    error: false\n  };\n  reportThread = () => {\n    API.reportThread(\n      this.props.board,\n      this.props.thread_id,\n      res =>\n        this.setState({\n          success: true,\n          error: false\n        }),\n      err => this.setState({ error: true, success: false, message: err.data })\n    );\n  };\n\n  reportReply = () => {\n    this.setState({ isLoading: true });\n    API.reportReply(\n      this.props.board,\n      this.props.thread_id,\n      this.props.reply_id,\n      res =>\n        this.setState({\n          success: true,\n          error: false,\n          isLoading: false\n        }),\n      err => this.setState({ error: true, success: false, message: err.data })\n    );\n  };\n\n  handleClose = () => this.setState({ modalOpen: false });\n\n  render() {\n    const { type } = this.props;\n    return (\n      <span>\n        {this.state.success ? (\n          <Icon name=\"check\" color=\"green\" />\n        ) : (\n          <Icon\n            color=\"red\"\n            disabled={this.state.success}\n            link={!this.state.success}\n            name=\"flag\"\n            onClick={type === \"thread\" ? this.reportThread : this.reportReply}\n          />\n        )}\n      </span>\n    );\n  }\n}\n\nexport default ReportButton;\n","import React from \"react\";\nimport { Segment, Grid } from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nimport DeleteForm from \"./DeleteForm\";\nimport ReportButton from \"./ReportButton\";\n\nconst ReplyComponent = ({ board, reply, thread_id }) => (\n  <Segment.Group>\n    <Segment>\n      <Grid>\n        <Grid.Column width={14}>\n          <Link to={`/b/${board}/thread/${thread_id}`}>#{reply._id}</Link> |{\" \"}\n          <time dateTime={new Date(reply.created_on)}>\n            {new Date(reply.created_on).toLocaleString(\"en-US\")}\n          </time>\n        </Grid.Column>\n        <Grid.Column width={2}>\n          <ReportButton\n            board={board}\n            reply_id={reply._id}\n            thread_id={thread_id}\n            type=\"reply\"\n          />\n          <DeleteForm\n            board={board}\n            reply_id={reply._id}\n            thread_id={thread_id}\n            type=\"reply\"\n          />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n    <Segment>{reply.text}</Segment>\n  </Segment.Group>\n);\n\nexport default ReplyComponent;\n","import React from \"react\";\nimport { Form, Segment, Header, Message } from \"semantic-ui-react\";\nimport { Redirect } from 'react-router-dom'\nimport API from \"../helpers/api\";\n\nclass NewReplyForm extends React.Component {\n  state = {\n    text: \"\",\n    delete: \"\",\n    success: false\n  };\n  handleChange = (e, { name, value }) => {\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = e => {\n    API.postReply(\n      e,\n      this.props.board,\n      this.state.text,\n      this.state.delete,\n      this.props.thread_id,\n      () => this.setState({ success: true }),\n      error => console.log(error)\n    );\n  };\n\n  render() {\n    return (\n      <Segment secondary>\n        <Header as=\"h5\">Reply to Thread</Header>\n        <Form reply>\n          <Form.Field>\n            <Form.TextArea\n              name=\"text\"\n              onChange={this.handleChange}\n              placeholder=\"Reply text...\"\n              value={this.state.text}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Form.Group>\n              <Form.Button\n                content=\"Add Reply\"\n                icon=\"reply\"\n                labelPosition=\"left\"\n                onClick={this.handleSubmit}\n                primary\n                size=\"mini\"\n              />\n              <Form.Input\n                name=\"delete\"\n                onChange={this.handleChange}\n                placeholder=\"Password to delete...\"\n                size=\"mini\"\n                type=\"password\"\n                value={this.state.delete}\n                width={4}\n              />\n            </Form.Group>\n          </Form.Field>\n        </Form>\n        {this.state.success && (\n          <Message success>Your reply was successfully submitted</Message>\n        )}\n      </Segment>\n    );\n  }\n}\n\nexport default NewReplyForm;\n","import React from \"react\";\nimport { Segment, Grid } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport DeleteForm from \"./DeleteForm\";\nimport ReplyComponent from \"./ReplyComponent\";\nimport NewReplyForm from \"./NewReplyForm\";\nimport ReportButton from \"./ReportButton\";\n\nconst ThreadPreview = ({ board, thread }) => (\n  <Segment.Group>\n    <Segment secondary>\n      <Grid columns={2}>\n        <Grid.Column width={14}>\n          <Link to={`/b/${board}/thread/${thread._id}`}>#{thread._id}</Link> |{\" \"}\n          <time dateTime={new Date(thread.created_on)}>\n            {new Date(thread.created_on).toLocaleString(\"en-US\")}\n          </time>\n        </Grid.Column>\n        <Grid.Column width={2}>\n          <ReportButton board={board} thread_id={thread._id} />\n          <DeleteForm board={board} thread_id={thread._id} type=\"thread\" />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n    <Segment>{thread.text}</Segment>\n    {thread.replycount > 0 && (\n      <Segment secondary>\n        {thread.replies.map(reply => (\n          <ReplyComponent\n            board={board}\n            key={reply._id}\n            reply={reply}\n            thread_id={thread._id}\n          />\n        ))}\n      </Segment>\n    )}\n    {thread.replycount > 3 && (\n      <Segment tertiary>\n        <p>\n          {thread.replycount - 3} replies omitted.{\" \"}\n          <Link to={`/b/${board}/thread/${thread._id}`}>Click to Expand.</Link>\n        </p>\n      </Segment>\n    )}\n    <NewReplyForm board={board} thread_id={thread._id} />\n  </Segment.Group>\n);\n\nexport default ThreadPreview;\n","import React from \"react\";\nimport { Segment, Loader, Header } from \"semantic-ui-react\";\nimport API from \"../helpers/api\";\nimport ThreadPreview from \"./ThreadPreview\";\n\nclass ThreadList extends React.Component {\n  state = {\n    threads: [],\n    isLoading: true\n  };\n\n  componentDidMount() {\n    API.listThreads(\n      this.props.board,\n      res =>\n        this.setState({\n          threads: res,\n          isLoading: false,\n          error: false\n        }),\n      err =>\n        this.setState({\n          isLoading: false,\n          error: true\n        })\n    );\n  }\n\n  render() {\n    const { threads } = this.state;\n\n    return (\n      <Segment vertical>\n        <Loader active={this.state.isLoading} />\n        {!this.state.isLoading && (\n          <div>\n            {this.state.error && (\n              <div>\n                <Header as=\"h2\">Sorry, there seems to be a problem.</Header>\n                <Header as=\"h4\">Please try again.</Header>\n              </div>\n            )}\n            {this.state.threads.length === 0 && (\n              <div>\n                <Header as=\"h2\">\n                  Sorry, there don't appear to be any threads here right now.\n                </Header>\n                <Header as=\"h4\"> Why don't you create a new one?</Header>\n              </div>\n            )}\n          </div>\n        )}\n\n        {threads.map(thread => (\n          <ThreadPreview\n            key={thread._id}\n            thread={thread}\n            board={this.props.board}\n          />\n        ))}\n      </Segment>\n    );\n  }\n}\n\nexport default ThreadList;\n","import React from \"react\";\nimport { Container, Header, Breadcrumb } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport NewThreadForm from \"../components/NewThreadForm\";\nimport ThreadList from \"../components/ThreadList\";\n\nclass BoardView extends React.Component {\n  render() {\n    return (\n      <Container text style={{ paddingTop: \"2rem\" }}>\n        <Breadcrumb>\n          <Breadcrumb.Section link>\n            <Link to=\"/\">Boards</Link>\n          </Breadcrumb.Section>\n          <Breadcrumb.Divider />\n          <Breadcrumb.Section link>\n            <Link to={`/b/${this.props.match.params.board}/`}>\n              {this.props.match.params.board}\n            </Link>\n          </Breadcrumb.Section>\n          <Breadcrumb.Divider />\n          <Breadcrumb.Section link>\n            <Link to={`/b/${this.props.match.params.board}/thread/${this.props.match.params.id}`}>\n              {this.props.match.params.id}\n            </Link>\n          </Breadcrumb.Section>\n        </Breadcrumb>\n        <Header as=\"h1\">\n          <Link to={`/b/${this.props.match.params.board}/`}>\n            /b/{this.props.match.params.board}/\n          </Link>\n        </Header>\n        <NewThreadForm board={this.props.match.params.board} />\n        <ThreadList board={this.props.match.params.board} />\n      </Container>\n    );\n  }\n}\n\nexport default BoardView;\n","import React from \"react\";\nimport { Segment, Grid } from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nimport ReportButton from \"./ReportButton\";\nimport NewReplyForm from \"./NewReplyForm\";\nimport DeleteForm from \"./DeleteForm\";\nimport ReplyComponent from \"./ReplyComponent\";\n\nconst ThreadComponent = ({ board, thread, value }) => (\n  <Segment.Group>\n    <Segment secondary>\n      <Grid columns={2}>\n        <Grid.Column width={14}>\n          <Link to={`/b/${board}/thread/${thread._id}`}>#{thread._id}</Link>\n        </Grid.Column>\n        <Grid.Column width={2}>\n          <ReportButton board={board} type=\"thread\" thread_id={thread._id} />\n          <DeleteForm board={board} type=\"thread\" thread_id={thread._id} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n    <Segment>{thread.text}</Segment>\n    <Segment secondary>\n      {thread.replies.map(reply => (\n        <ReplyComponent\n          board={board}\n          key={reply._id}\n          reply={reply}\n          thread_id={thread._id}\n        />\n      ))}\n    </Segment>\n    <NewReplyForm board={board} thread_id={thread._id} />\n  </Segment.Group>\n);\n\nexport default ThreadComponent;\n","import React from \"react\";\nimport { Container, Loader, Header, Breadcrumb } from \"semantic-ui-react\";\nimport ThreadComponent from \"../components/ThreadComponent\";\nimport API from \"../helpers/api\";\nimport { Link } from \"react-router-dom\";\n\nclass ThreadView extends React.Component {\n  state = {\n    thread: {},\n    isLoading: true\n  };\n  componentDidMount() {\n    API.getCompleteThread(\n      this.props.match.params.board,\n      this.props.match.params.id,\n      res => this.setState({ thread: res.data, isLoading: false }),\n      err => \"err\"\n    );\n  }\n\n  render() {\n    const board = this.props.match.params.board;\n    return (\n      <Container style={{ paddingTop: \"2rem\" }} text>\n        <Breadcrumb>\n          <Breadcrumb.Section link>\n            <Link to=\"/\">Boards</Link>\n          </Breadcrumb.Section>\n          <Breadcrumb.Divider />\n          <Breadcrumb.Section link>\n            <Link to={`/b/${this.props.match.params.board}/`}>\n              {this.props.match.params.board}\n            </Link>\n          </Breadcrumb.Section>\n          <Breadcrumb.Divider />\n          <Breadcrumb.Section link>\n            <Link to={`/b/${this.props.match.params.board}/thread/${this.props.match.params.id}`}>\n              {this.props.match.params.id}\n            </Link>\n          </Breadcrumb.Section>\n        </Breadcrumb>\n        <Header as=\"h1\">\n          <Link to={`/b/${board}/`}>/b/{board}/</Link>\n        </Header>\n\n        <Loader active={this.state.isLoading} />\n        {!this.state.isLoading && (\n          <ThreadComponent\n            board={this.props.match.params.board}\n            thread={this.state.thread}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default ThreadView;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Icon, Button } from \"semantic-ui-react\";\n\nconst Navbar = () => (\n  <Menu color=\"blue\" inverted secondary>\n    <Menu.Item>\n      <Menu.Header as=\"h3\">Anon Messageboards</Menu.Header>\n    </Menu.Item>\n    <Menu.Menu>\n      <Menu.Item>\n        <Link to=\"/\">Home</Link>\n      </Menu.Item>\n    </Menu.Menu>\n    <Menu.Menu position=\"right\">\n      <Menu.Item link>\n        <a href=\"https://github.com/czamp\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <Button icon inverted color=\"white\">\n            <Icon name=\"github\" />\n            {' '}See The Source Code\n          </Button>\n        </a>\n      </Menu.Item>\n    </Menu.Menu>\n  </Menu>\n);\n\nexport default Navbar;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./views/Home\";\nimport BoardView from \"./views/BoardView\";\nimport ThreadView from \"./views/ThreadView\";\nimport Navbar from './components/Navbar';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div\n          style={{\n            minHeight: '100vh',\n            background: '#f0e0d6'\n          }}\n        >\n          <Navbar />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/b/:board/\" exact component={BoardView} />\n            <Route path=\"/b/:board/thread/:id\" exact component={ThreadView} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}