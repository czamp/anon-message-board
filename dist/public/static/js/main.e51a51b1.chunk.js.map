{"version":3,"sources":["components/Navbar.js","config.js","helpers/api.js","components/PublishThread.js","components/BreadcrumbNav.js","components/TimeStamp.js","components/PublishReply.js","components/DeletePost.js","components/Reply.js","components/Thread.js","components/Board.js","components/BoardList.js","components/SingleThread.js","App.js","index.js"],"names":["Navbar","react_default","a","createElement","Menu","color","inverted","secondary","Item","Header","as","react_router_dom","to","position","link","href","target","rel","Button","icon","Icon","name","URL","API","listBoards","callback","error","Axios","get","concat","then","res","data","catch","err","response","listThreads","board","getCompleteThread","thread_id","postThread","event","text","delete_password","preventDefault","post","postReply","deleteThread","delete","deleteReply","reply_id","reportThread","put","reportReply","PublishThread","state","success","redirect","handleAddition","e","_ref","value","_this","setState","prevState","boards","Object","toConsumableArray","handleChange","_ref2","defineProperty","boardInputError","passwordInputError","textInputError","handleSubmit","props","allBoards","console","log","this","map","b","i","key","sort","react_router","Segment","Form","Field","Dropdown","allowAdditions","fluid","onAddItem","onChange","options","placeholder","search","selection","Message","required","TextArea","Input","type","width","content","labelPosition","onClick","primary","Component","defaultProps","BreadcrumbNav","Breadcrumb","Section","Fragment","Divider","toUpperCase","TimeStamp","time","dateTime","Date","toLocaleString","PublishReply","onSubmit","DeletePost","Modal","onClose","closeModal","open","modalOpen","size","trigger","openModal","Content","delete_post_password","Group","basic","loading","isLoading","onDelete","postDeleted","deleteErrorMessage","Reply","replyDeleted","reported","reportError","onInputChange","reply","_id","requestingDelete","_this$props","Grid","Column","components_TimeStamp","created_on","components_DeletePost","Thread","thread","id","onReplySubmit","preview","checkUpdatedRender","onDeleteSuccess","onThreadDelete","currentThreadDeleted","_this2","Loader","active","columns","replies","length","components_Reply","replycount","tertiary","components_PublishReply","React","Board","threads","getAllThreads","match","params","components_BreadcrumbNav","textAlign","components_PublishThread","vertical","components_Thread","BoardList","getBoards","inline","List","horizontal","divided","celled","SingleThread","App","style","minHeight","background","components_Navbar","Container","paddingTop","path","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e51a51b1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Icon, Button } from \"semantic-ui-react\";\n\nconst Navbar = () => (\n  <Menu color=\"blue\" inverted secondary>\n    <Menu.Item>\n      <Menu.Header as=\"h3\">Anon Messageboards</Menu.Header>\n    </Menu.Item>\n    <Menu.Menu>\n      <Menu.Item>\n        <Link to=\"/\">Home</Link>\n      </Menu.Item>\n    </Menu.Menu>\n    <Menu.Menu position=\"right\">\n      <Menu.Item link>\n        <a href=\"https://github.com/czamp/anon-message-board\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <Button icon inverted>\n            <Icon name=\"github\" />\n            {' '}See The Source Code\n          </Button>\n        </a>\n      </Menu.Item>\n    </Menu.Menu>\n  </Menu>\n);\n\nexport default Navbar;\n","let URL;\n\nif (process.env.NODE_ENV === 'development') {\n  URL = 'http://localhost:3000'\n}\nif (process.env.NODE_ENV === 'production') {\n  URL = 'https://flashy-anaconda.glitch.me'\n}\n\n\nexport default URL\n","import Axios from 'axios';\nimport URL from '../config';\n\nconst API = {\n\n  listBoards: (callback, error) => {\n    return Axios.get(`${URL}/api/boards`)\n      .then(res => callback(res.data))\n      .catch(err => error(err.response))\n  },\n\n  listThreads: (board, callback, error) => {\n    Axios.get(`${URL}/api/threads/${board}`)\n      .then(res => callback(res.data))\n      .catch(err => error(err.response))\n  },\n\n  getCompleteThread: (board, thread_id, callback, error) => {\n    Axios.get(`${URL}/api/replies/${board}?thread_id=${thread_id}`)\n    .then(res => callback(res))\n    .catch(err => error(err.response))\n  },\n\n  postThread: (event, board, text, delete_password, callback, error) => {\n    event.preventDefault();\n    Axios.post(`${URL}/api/threads/${board}`, {text, delete_password})\n      .then(res => callback(res))\n      .catch(err => error(err.response));\n  },\n\n  postReply: (event, board, text, delete_password, thread_id, callback, error) => {\n    event.preventDefault();\n    Axios.post(`${URL}/api/replies/${board}`, {text, delete_password, thread_id})\n      .then(res => callback(res))\n      .catch(err => error(err.response))\n  },\n\n  deleteThread: (event, board, thread_id, delete_password, callback, error) => {\n    event.preventDefault();\n    Axios.delete(`${URL}/api/threads/${board}`, {data: {thread_id, delete_password}})\n      .then(res => callback(res))\n      .catch(err => error(err.response));\n  },\n\n  deleteReply: (event, board, thread_id, reply_id, delete_password, callback, error) => {\n    event.preventDefault();\n    Axios.delete(`${URL}/api/replies/${board}`, {data: {thread_id, reply_id, delete_password}})\n      .then(res => callback(res))\n      .catch(err => error(err.response));\n  },\n\n  reportThread: (board, thread_id, callback, error) => {\n    Axios.put(`${URL}/api/threads/${board}`, {thread_id})\n      .then(res => callback(res))\n      .catch(err => error(err.response))\n  },\n\n  reportReply: (board, thread_id, reply_id, callback, error) => {\n    Axios.put(`${URL}/api/replies/${board}`, {thread_id, reply_id})\n      .then(res => callback(res))\n      .catch(err => error(err.response))\n  }\n\n}\n\nexport default API;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dropdown, Form, Header, Message, Segment } from \"semantic-ui-react\";\nimport { Redirect } from \"react-router-dom\";\nimport API from \"../helpers/api\";\n\nclass PublishThread extends Component {\n  state = {\n    text: \"\",\n    delete_password: \"\",\n    success: false,\n    redirect: false\n  };\n\n  static propTypes = {\n    allBoards: PropTypes.bool,\n    board: PropTypes.string,\n    boards: PropTypes.array\n  };\n\n  static defaultProps = {\n    allBoards: false\n  };\n\n  componentDidMount() {\n    if (this.props.allBoards) {\n      var boards = this.props.boards.map((b, i) => {\n        return { key: i, text: b, value: b };\n      });\n      this.setState({\n        boards: boards.sort((a, b) => {\n          if (a.text > b.text) {\n            return 1;\n          } else return -1;\n        })\n      });\n    }\n  }\n\n  handleAddition = (e, { value }) => {\n    this.setState(prevState => ({\n      boards: [{ text: value, value }, ...prevState.boards]\n    }));\n  };\n\n  handleChange = (e, { name, value }) => {\n    this.setState({\n      [name]: value\n    });\n    if (name === \"board\") {\n      this.setState({ boardInputError: false });\n    }\n    if (name === \"delete_password\") {\n      this.setState({ passwordInputError: false });\n    }\n    if (name === \"text\") {\n      this.setState({ textInputError: false });\n    }\n  };\n\n  handleSubmit = e => {\n    if (this.props.allBoards && this.state.board === \"\") {\n      this.setState({\n        boardInputError: true\n      });\n    }\n    if (this.state.text === \"\") {\n      this.setState({\n        textInputError: true\n      });\n    }\n    if (this.state.delete_password === \"\") {\n      this.setState({\n        passwordInputError: true\n      });\n    } else {\n      API.postThread(\n        e,\n        this.state.board ? this.state.board : this.props.board,\n        this.state.text,\n        this.state.delete_password,\n        res =>\n          this.setState({\n            success: true,\n            text: \"\",\n            delete_password: \"\",\n            redirect: true,\n            thread_id: res.data\n          }),\n        error => console.log(error)\n      );\n    }\n  };\n\n  render() {\n    if (this.state.redirect && this.props.allBoards) {\n      return <Redirect to={`/b/${this.state.board}/`} />;\n    }\n    if (this.state.redirect && !this.props.allBoards) {\n      return (\n        <Redirect\n          to={`/b/${this.props.board}/thread/${this.state.thread_id}`}\n        />\n      );\n    }\n    return (\n      <Segment>\n        <Header>Submit a new Thread</Header>\n        <Form error>\n          {this.props.allBoards && (\n            <Form.Field>\n              <label>Board</label>\n              <Dropdown\n                allowAdditions\n                fluid\n                name=\"board\"\n                onAddItem={this.handleAddition}\n                onChange={this.handleChange}\n                options={this.state.boards ? this.state.boards : []}\n                placeholder=\"Choose a board, or create your own\"\n                search\n                selection\n                value={this.state.board}\n              />\n              {this.state.boardInputError && (\n                <Message error>\n                  Please select a board to post this thread to.\n                </Message>\n              )}\n            </Form.Field>\n          )}\n          <Form.Field required>\n            <label>Thread Text</label>\n            <Form.TextArea\n              name=\"text\"\n              onChange={this.handleChange}\n              placeholder=\"Thread text...\"\n              value={this.state.text}\n            />\n            {this.state.textInputError && (\n              <Message error>\n                Please enter some text for your new thread\n              </Message>\n            )}\n          </Form.Field>\n          <Form.Field required>\n            <label>Delete Password</label>\n            <Form.Input\n              name=\"delete_password\"\n              onChange={this.handleChange}\n              placeholder=\"Enter a password to delete post\"\n              type=\"password\"\n              value={this.state.delete_password}\n              width={8}\n            />\n            {this.state.passwordInputError && (\n              <Message error>\n                Please enter a password to delete this thread\n              </Message>\n            )}\n          </Form.Field>\n          <Form.Field>\n            <Form.Button\n              content=\"Submit Thread\"\n              icon=\"edit\"\n              labelPosition=\"left\"\n              onClick={this.handleSubmit}\n              primary\n            />\n          </Form.Field>\n        </Form>\n      </Segment>\n    );\n  }\n}\n\nexport default PublishThread;\n","import React from \"react\";\nimport { Breadcrumb } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nconst BreadcrumbNav = props => (\n  <Breadcrumb>\n    <Breadcrumb.Section>\n      <Link to=\"/\">BOARDS</Link>\n    </Breadcrumb.Section>\n    {props.board && (\n      <React.Fragment>\n        <Breadcrumb.Divider />\n        <Breadcrumb.Section>\n          <Link to={`/b/${props.board}/`}>{props.board.toUpperCase()}</Link>\n        </Breadcrumb.Section>\n      </React.Fragment>\n    )}\n    {props.thread_id && (\n      <React.Fragment>\n        <Breadcrumb.Divider />\n        <Breadcrumb.Section>\n          <Link to={`/b/${props.board}/thread/${props.thread_id}`}>\n            {props.thread_id}\n          </Link>\n        </Breadcrumb.Section>\n      </React.Fragment>\n    )}\n  </Breadcrumb>\n);\n\nexport default BreadcrumbNav;\n","import React from \"react\";\n\nconst TimeStamp = ({ time }) => (\n  <time dateTime={new Date(time)}>\n    {new Date(time).toLocaleString(\"en-US\")}\n  </time>\n);\n\nexport default TimeStamp;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Header, Form, Message, Segment } from \"semantic-ui-react\";\n\nconst PublishReply = props => (\n  <Segment secondary>\n    <Header as=\"h5\">Reply to Thread</Header>\n    <Form error>\n      <Form.Field required>\n        <Form.TextArea\n          name=\"text\"\n          onChange={props.onChange}\n          placeholder=\"Please enter your reply here\"\n          value={props.text}\n        />\n        {props.textInputError && (\n          <Message error>Please enter some text for your reply</Message>\n        )}\n      </Form.Field>\n      <Form.Field required>\n        <Form.Input\n          name=\"delete_password\"\n          onChange={props.onChange}\n          placeholder=\"Enter a password to delete reply\"\n          type=\"password\"\n          value={props.delete_password}\n          width={8}\n        />\n        {props.passwordInputError && (\n          <Message error>Please enter a password to delete this reply.</Message>\n        )}\n      </Form.Field>\n      <Form.Field>\n        <Form.Button\n          content=\"Add Reply\"\n          icon=\"reply\"\n          labelPosition=\"left\"\n          onClick={props.onSubmit}\n          primary\n        />\n      </Form.Field>\n    </Form>\n  </Segment>\n);\n\nPublishReply.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  text: PropTypes.string,\n  delete_password: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  passwordInputError: PropTypes.bool,\n  textInputError: PropTypes.bool\n};\n\nexport default PublishReply;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Header, Icon, Message, Modal } from \"semantic-ui-react\";\n\nconst DeletePost = props => (\n  <Modal\n    onClose={props.closeModal}\n    open={props.modalOpen}\n    size=\"small\"\n    trigger={<Icon onClick={props.openModal} link name=\"trash\" />}\n  >\n    <Modal.Content>\n      <Header>Delete this post?</Header>\n      <Form>\n        <Form.Field>\n          <label>Enter your password to delete</label>\n          <Form.Input\n            name=\"delete_post_password\"\n            onChange={props.handleChange}\n            placeholder=\"Password to delete post\"\n            type=\"password\"\n            value={props.delete_post_password}\n          />\n        </Form.Field>\n        <Form.Group>\n          <Form.Button\n            basic\n            color=\"red\"\n            loading={props.isLoading}\n            onClick={props.onDelete}\n            size=\"mini\"\n          >\n            Delete\n          </Form.Button>\n          <Form.Button size=\"mini\" onClick={props.closeModal} color=\"blue\">\n            Cancel\n          </Form.Button>\n        </Form.Group>\n      </Form>\n      {props.postDeleted && (\n        <Message success>\n          <Message.Header>Success</Message.Header>\n          Your post was successfully deleted.\n        </Message>\n      )}\n      {props.deleteErrorMessage && (\n        <Message error>\n          <Message.Header>Error: {props.deleteErrorMessage}</Message.Header>\n          Your post could not be deleted. Please try again.\n        </Message>\n      )}\n    </Modal.Content>\n  </Modal>\n);\n\nDeletePost.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  openModal: PropTypes.func.isRequired,\n  modalOpen: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool,\n  onDelete: PropTypes.func.isRequired,\n  postDeleted: PropTypes.bool,\n  deleteErrorMessage: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n  delete_password: PropTypes.string\n};\n\nexport default DeletePost;\n","import React, { Component } from \"react\";\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport TimeStamp from \"./TimeStamp\";\nimport DeletePost from \"./DeletePost\";\nimport API from \"../helpers/api\";\n\nclass Reply extends Component {\n  state = {\n    delete_post_password: \"\",\n    replyDeleted: false,\n    reported: false,\n    reportError: false,\n    modalOpen: false\n  };\n\n  onInputChange = (e, { name, value }) => {\n    this.setState({\n      [name]: value\n    });\n  };\n\n  reportReply = () => {\n    API.reportReply(\n      this.props.board,\n      this.props.thread_id,\n      this.props.reply._id,\n      res => this.setState({ reported: true }),\n      error => this.setState({ reportError: true })\n    );\n  };\n\n  deleteReply = e => {\n    this.setState({\n      requestingDelete: true\n    });\n    if (this.state.delete_post_password === \"\") {\n      this.setState({\n        deleteErrorMessage: \"Please enter your password\",\n        requestingDelete: false\n      });\n    } else {\n      API.deleteReply(\n        e,\n        this.props.board,\n        this.props.thread_id,\n        this.props.reply._id,\n        this.state.delete_post_password,\n        data =>\n          data.data !== \"incorrect password\"\n            ? this.setState({\n                deleteErrorMessage: \"\",\n                requestingDelete: false,\n                replyDeleted: true,\n                modalOpen: false\n              })\n            : this.setState({\n                deleteErrorMessage: data.data,\n                requestingDelete: false,\n                delete_post_password: \"\"\n              }),\n        err =>\n          this.setState({\n            deleteErrorMessage: \"Something went wrong, please try again\",\n            requestingDelete: false\n          })\n      );\n    }\n  };\n\n  openModal = () => {\n    this.setState({ modalOpen: true });\n  };\n  closeModal = () => {\n    this.setState({ modalOpen: false, delete_post_password: \"\" });\n  };\n\n  render() {\n    const { reply, board, thread_id } = this.props;\n    return (\n      <Segment.Group>\n        <Segment>\n          <Grid>\n            <Grid.Column width={14}>\n              <Link to={`/b/${board}/thread/${thread_id}`}>#{reply._id}</Link> |{\" \"}\n              <TimeStamp\n                time={reply.created_on}\n                loading={this.state.isLoading}\n              />\n            </Grid.Column>\n            <Grid.Column width={2}>\n              {this.state.reported ? (\n                <Icon name=\"check\" color=\"green\" />\n              ) : (\n                <Icon color=\"red\" link name=\"flag\" onClick={this.reportReply} />\n              )}\n              <DeletePost\n                closeModal={this.closeModal}\n                delete_post_password={this.state.delete_post_password}\n                deleteErrorMessage={this.state.deleteErrorMessage}\n                handleChange={this.onInputChange}\n                isLoading={this.state.requestingDelete}\n                modalOpen={this.state.modalOpen}\n                onDelete={this.deleteReply}\n                openModal={this.openModal}\n                postDeleted={this.state.postDeleted}\n              />\n            </Grid.Column>\n          </Grid>\n        </Segment>\n        <Segment>{this.state.replyDeleted ? \"[deleted]\" : reply.text}</Segment>\n      </Segment.Group>\n    );\n  }\n}\n\nexport default Reply;\n","import React from \"react\";\nimport { Grid, Icon, Loader, Message, Segment } from \"semantic-ui-react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport TimeStamp from \"./TimeStamp\";\nimport PublishReply from \"./PublishReply\";\nimport DeletePost from \"./DeletePost\";\nimport Reply from \"./Reply\";\nimport API from \"../helpers/api\";\n\nclass Thread extends React.Component {\n  state = {\n    delete_password: \"\",\n    delete_post_password: \"\",\n    deleteErrorMessage: \"\",\n    isLoading: true,\n    modalOpen: false,\n    passwordInputError: false,\n    postDeleted: false,\n    requestingDelete: false,\n    text: \"\",\n    textInputError: false,\n    thread: {},\n    redirect: false,\n    reported: false\n  };\n\n  componentDidMount() {\n    if (this.props.preview) {\n      this.setState({\n        thread: this.props.thread,\n        isLoading: false\n      });\n    } else {\n      this.getCompleteThread();\n    }\n  }\n\n  getCompleteThread = () => {\n    API.getCompleteThread(\n      this.props.board,\n      this.props.id,\n      res => this.setState({ thread: res.data, isLoading: false }),\n      err => console.log(err)\n    );\n  };\n\n  onInputChange = (e, { name, value }) => {\n    this.setState({\n      [name]: value\n    });\n    if (name === \"delete_password\") {\n      this.setState({ passwordInputError: false });\n    }\n    if (name === \"text\") {\n      this.setState({ textInputError: false });\n    }\n  };\n\n  onReplySubmit = e => {\n    if (this.state.text === \"\") {\n      this.setState({\n        textInputError: true\n      });\n    }\n    if (this.state.delete_password === \"\") {\n      this.setState({\n        passwordInputError: true\n      });\n    } else if (!this.state.textInputError && !this.state.passwordInputError) {\n      API.postReply(\n        e,\n        this.props.board,\n        this.state.text,\n        this.state.delete_password,\n        this.state.thread._id,\n        () =>\n          this.setState(\n            {\n              success: true,\n              text: \"\",\n              delete_password: \"\",\n              redirect: this.props.preview && true\n            },\n            () => this.checkUpdatedRender()\n          ),\n        error => console.log(error)\n      );\n    }\n  };\n\n  reportThread = () => {\n    API.reportThread(\n      this.props.board,\n      this.state.thread._id,\n      res => this.setState({ reported: true }),\n      err => this.setState({ reportError: true })\n    );\n  };\n\n  deleteThread = e => {\n    this.setState({\n      requestingDelete: true\n    });\n    if (this.state.delete_post_password === \"\") {\n      this.setState({\n        deleteErrorMessage: \"Please enter your password\",\n        requestingDelete: false\n      });\n    } else {\n      API.deleteThread(\n        e,\n        this.props.board,\n        this.state.thread._id,\n        this.state.delete_post_password,\n        data =>\n          data.data !== \"incorrect password\"\n            ? this.setState(\n                {\n                  deleteErrorMessage: \"\",\n                  requestingDelete: false,\n                  postDeleted: true,\n                  modalOpen: false\n                },\n                () => this.onDeleteSuccess()\n              )\n            : this.setState({\n                deleteErrorMessage: data.data,\n                requestingDelete: false,\n                delete_post_password: \"\"\n              }),\n        err =>\n          this.setState({\n            deleteErrorMessage: \"Something went wrong, please try again.\",\n            requestingDelete: false\n          })\n      );\n    }\n  };\n\n  onDeleteSuccess = () => {\n    if (this.props.preview) {\n      this.props.onThreadDelete();\n    } else {\n      this.setState({ currentThreadDeleted: true });\n    }\n  };\n\n  openModal = () => this.setState({ modalOpen: true });\n\n  closeModal = () =>\n    this.setState({ modalOpen: false, delete_post_password: \"\" });\n\n  // Should re-render thread component if not preview\n  checkUpdatedRender = () => {\n    if (!this.state.redirect) {\n      this.getCompleteThread();\n    }\n  };\n\n  render() {\n    // NOTE: Swapping thread from props to state;\n    const { thread } = this.state;\n    const { board } = this.props;\n    if (this.state.isLoading) {\n      return (\n        <Segment>\n          <Loader active={this.state.isLoading} />\n        </Segment>\n      );\n    }\n    if (this.state.redirect) {\n      return <Redirect to={`/b/${board}/thread/${thread._id}`} />;\n    }\n    if (this.state.currentThreadDeleted) {\n      return (\n        <React.Fragment>\n          <Message success>\n            Your thread has been successfully deleted.\n            <Link to={`/b/${board}/`}>Click here to return to /b/{board}</Link>\n          </Message>\n        </React.Fragment>\n      );\n    }\n    return (\n      <Segment.Group>\n        <Segment secondary>\n          <Grid columns={2}>\n            <Grid.Column width={14}>\n              <Link to={`/b/${board}/thread/${thread._id}`}>#{thread._id}</Link>{\" \"}\n              |{\" \"}\n              <TimeStamp\n                time={thread.created_on}\n                loading={this.state.isLoading}\n              />\n            </Grid.Column>\n            <Grid.Column width={2}>\n              {this.state.reported ? (\n                <Icon name=\"check\" color=\"green\" />\n              ) : (\n                <Icon\n                  color=\"red\"\n                  link\n                  name=\"flag\"\n                  onClick={this.reportThread}\n                />\n              )}\n              <DeletePost\n                closeModal={this.closeModal}\n                delete_post_password={this.state.delete_post_password}\n                deleteErrorMessage={this.state.deleteErrorMessage}\n                handleChange={this.onInputChange}\n                isLoading={this.state.requestingDelete}\n                modalOpen={this.state.modalOpen}\n                onDelete={this.deleteThread}\n                openModal={this.openModal}\n                postDeleted={this.state.postDeleted}\n              />\n            </Grid.Column>\n          </Grid>\n        </Segment>\n        <Segment>{thread.text}</Segment>\n        {thread.replies.length > 0 && (\n          <Segment secondary>\n            {thread.replies.map(reply => (\n              <Reply\n                reply={reply}\n                key={reply._id}\n                board={board}\n                thread_id={this.props.id}\n              />\n            ))}\n          </Segment>\n        )}\n        {thread.replycount > 3 && thread.replycount > thread.replies.length && (\n          <Segment tertiary>\n            <p>\n              {thread.replycount - 3} replies omitted.{\" \"}\n              <Link to={`/b/${board}/thread/${thread._id}`}>\n                Click to Expand.\n              </Link>\n            </p>\n          </Segment>\n        )}\n        <PublishReply\n          onChange={this.onInputChange}\n          onSubmit={this.onReplySubmit}\n          text={this.state.text}\n          delete_password={this.state.delete_password}\n          textInputError={this.state.textInputError}\n          passwordInputError={this.state.passwordInputError}\n        />\n      </Segment.Group>\n    );\n  }\n}\n\nexport default Thread;\n","import React, { Component } from \"react\";\nimport { Header, Loader, Message, Segment } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport PublishThread from \"./PublishThread\";\nimport BreadcrumbNav from \"./BreadcrumbNav\";\nimport Thread from \"./Thread\";\nimport API from \"../helpers/api\";\n\nclass Board extends Component {\n  state = {\n    threads: [],\n    isLoading: true\n  };\n\n  componentDidMount() {\n    this.getAllThreads();\n  }\n\n  getAllThreads = () => {\n    API.listThreads(\n      this.props.match.params.board,\n      res =>\n        this.setState({\n          threads: res,\n          isLoading: false,\n          error: false\n        }),\n      err =>\n        this.setState({\n          isLoading: false,\n          error: true\n        })\n    );\n  };\n\n  render() {\n    const board = this.props.match.params.board;\n    const { threads } = this.state;\n    return (\n      <React.Fragment>\n        <BreadcrumbNav board={board} />\n        <Header as=\"h1\" textAlign=\"center\">\n          <Link to={`/b/${board}/`}>/b/{board}/</Link>\n        </Header>\n        <PublishThread board={board} />\n        <Segment vertical>\n          <Loader active={this.state.isLoading} />\n\n          {!this.state.isLoading && (\n            <React.Fragment>\n              {this.state.error && (\n                <React.Fragment>\n                  <Header as=\"h2\">Sorry, there seems to be a problem.</Header>\n                  <Message error>\n                    Error: Cannot get threads for /b/{board}/{\" \"}\n                  </Message>\n                </React.Fragment>\n              )}\n              {this.state.threads.length === 0 && (\n                <React.Fragment>\n                  <Header as=\"h2\">\n                    {\" \"}\n                    Sorry, there don't appear to be any threads on /b/{board}/.\n                  </Header>\n                  <Header as=\"h4\">Why don't you create a new one?</Header>\n                </React.Fragment>\n              )}\n            </React.Fragment>\n          )}\n\n          {threads.map(thread => (\n            <Thread\n              board={board}\n              key={thread._id}\n              preview\n              thread={thread}\n              onThreadDelete={this.getAllThreads}\n            />\n          ))}\n        </Segment>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Board;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Breadcrumb,\n  Divider,\n  Header,\n  List,\n  Loader,\n  Message,\n  Segment\n} from \"semantic-ui-react\";\nimport API from \"../helpers/api\";\nimport PublishThread from \"./PublishThread\";\n\nclass BoardList extends Component {\n  state = {\n    boards: [],\n    isLoading: true,\n    error: false\n  };\n\n  componentDidMount() {\n    this.getBoards();\n  }\n\n  getBoards = () => {\n    API.listBoards(\n      boards =>\n        this.setState({\n          error: false,\n          isLoading: false,\n          boards: boards.sort((a, b) => {\n            if (a > b) {\n              return 1;\n            } else {\n              return -1;\n            }\n          })\n        }),\n      error =>\n        this.setState({\n          error: true,\n          isLoading: false\n        })\n    );\n  };\n\n  render() {\n    if (this.state.error) {\n      return (\n        <React.Fragment>\n          <Breadcrumb>\n            <Breadcrumb.Section>\n              <Link to=\"/\">BOARDS</Link>\n            </Breadcrumb.Section>\n          </Breadcrumb>\n          <Message error>Error: Can not retrieve list of boards.</Message>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <Breadcrumb>\n            <Breadcrumb.Section>\n              <Link to=\"/\">BOARDS</Link>\n            </Breadcrumb.Section>\n          </Breadcrumb>\n          <Segment>\n            <Header as=\"h2\">Select a board to begin</Header>\n            <Loader inline=\"centered\" active={this.state.isLoading}>\n              Fetching Boards\n            </Loader>\n            {!this.state.isLoading && !this.state.error && (\n              <List horizontal divided celled>\n                {this.state.boards.map((board, i) => (\n                  <List.Item key={i}>\n                    <Link to={`/b/${board}/`}>{board.toUpperCase()}</Link>\n                  </List.Item>\n                ))}\n              </List>\n            )}\n          </Segment>\n          <Divider horizontal>or</Divider>\n          <Loader inline=\"centered\" active={this.state.isLoading} />\n          {!this.state.isLoading && !this.state.error && (\n            <PublishThread allBoards={true} boards={this.state.boards} />\n          )}\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default BoardList;\n","import React from \"react\";\nimport { Header, Segment } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport Thread from \"./Thread\";\nimport BreadcrumbNav from \"./BreadcrumbNav\";\n\nconst SingleThread = props => (\n  <React.Fragment>\n    <BreadcrumbNav\n      board={props.match.params.board}\n      thread_id={props.match.params.id}\n    />\n    <Thread board={props.match.params.board} id={props.match.params.id} />\n    <Segment vertical>\n      <Header as=\"h4\">\n        <Link to={`/b/${props.match.params.board}`}>\n          Click here to return to /b/{props.match.params.board}/\n        </Link>\n      </Header>\n    </Segment>\n  </React.Fragment>\n);\n\nexport default SingleThread;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Container } from \"semantic-ui-react\";\nimport Navbar from \"./components/Navbar\";\nimport Board from \"./components/Board\";\nimport BoardList from \"./components/BoardList\";\nimport SingleThread from \"./components/SingleThread\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div\n          style={{\n            minHeight: \"100vh\",\n            background: \"#f0e0d6\"\n          }}\n        >\n          <Navbar />\n          <Container text style={{ paddingTop: \"2rem\" }}>\n            <Switch>\n              <Route path=\"/\" exact component={BoardList} />\n              <Route path=\"/b/:board/\" exact component={Board} />\n              <Route\n                path=\"/b/:board/thread/:id\"\n                exact\n                component={SingleThread}\n              />\n            </Switch>\n          </Container>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}